'''
给定一个包含0和1的二维网格地图，其中1表示陆地0表示水域。网格中的格子水平和垂直方向相连
（对角线方向不相连）。整个网格被水完全包围，但其中恰好有一个岛屿（或者说，一个或多个表
示陆地的格子相连组成的岛屿）。岛屿中没有“湖”（“湖” 指水域在岛屿内部且不和岛屿周围的水
相连）。格子是边长为1的正方形。网格为长方形且宽度和高度均不超过100.计算这个岛屿的周长。
输入: [[0,1,0,0],
      [1,1,1,0],
      [0,1,0,0],
      [1,1,0,0]]
输出: 16
'''

def islandPerimeter(grid):
    m, n, ans = len(grid), len(grid[0]), 0
    for i in range(m):
        for j in range(n):
            if grid[i][j] == 1:
                if i == 0 or grid[i - 1][j] == 0:
                    ans += 1
                if i == (m - 1) or grid[i + 1][j] == 0:
                    ans += 1
                if j == 0 or grid[i][j - 1] == 0:
                    ans += 1
                if j == (n - 1) or grid[i][j + 1] == 0:
                    ans += 1
    return ans

print(islandPerimeter([[0,1,0,0],
                       [1,1,1,0],
                       [0,1,0,0],
                       [1,1,0,0]]))
                    
#93.49
#76.58