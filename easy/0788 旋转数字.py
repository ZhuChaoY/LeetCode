'''
X为好数, 如果它的每位数字被旋转180度后，仍可以得到一个有效的，且和X不同的数。要求每位数
字都要被旋转。如果一个数的每位数字被旋转以后还是一个数字，则这个数是有效的。0, 1,8被旋
转后仍然是它们自己；2和5可以互相旋转成对方（在这种情况下，它们以不同的方向旋转，2和5互
为镜像）；6 和 9 同理，除了这些以外其他的数字旋转以后都不再是有效的数字。
现在我们有一个正整数 N, 计算从 1 到 N 中有多少个数 X 是好数？
示例： 输入: 10 输出: 4 解释:  在[1, 10]中有四个好数： 2, 5, 6, 9。
注意 1 和 10 不是好数, 因为他们在旋转之后不变。N 的取值范围是 [1, 10000]。
'''

def rotatedDigits(n):
    map_dict = {'0': '0', '1': '1', '2': '5', '5': '2',
                '6': '9', '8': '8', '9': '6'}
    _neg = 0
    for i in range(1, n + 1):
        i, new_i = str(i), ''
        for x in i:
            if x not in map_dict:
                _neg += 1
                break
            else:
                new_i += map_dict[x]
        if new_i == i:
            _neg += 1
    return n - _neg
    
print(rotatedDigits(10))

#55.56
#7.62
